{
  "workflows": {
    "summary": {
      "total_workflows": 6,
      "valid_workflows": 6,
      "warnings": 8,
      "errors": 0
    },
    "workflows": [
      {
        "file": ".github/workflows/ci.yml",
        "syntax": {
          "file": ".github/workflows/ci.yml",
          "valid": true,
          "errors": []
        },
        "triggers": {
          "file": ".github/workflows/ci.yml",
          "triggers": [
            "pull_request",
            "push"
          ],
          "warnings": []
        },
        "actions": {
          "file": ".github/workflows/ci.yml",
          "actions": [
            "actions/checkout@v4",
            "./.github/actions/free-disk-space",
            "./.github/actions/ubuntu-dependencies",
            "./.github/actions/macos-dependencies",
            "actions/checkout@v4",
            "./.github/actions/free-disk-space",
            "./.github/actions/ubuntu-dependencies",
            "./.github/actions/macos-dependencies",
            "actions/checkout@v4",
            "./.github/actions/free-disk-space"
          ],
          "warnings": [
            "Action './.github/actions/free-disk-space' not version pinned",
            "Action './.github/actions/ubuntu-dependencies' not version pinned",
            "Action './.github/actions/macos-dependencies' not version pinned",
            "Action './.github/actions/free-disk-space' not version pinned",
            "Action './.github/actions/ubuntu-dependencies' not version pinned",
            "Action './.github/actions/macos-dependencies' not version pinned",
            "Action './.github/actions/free-disk-space' not version pinned"
          ]
        },
        "secrets": {
          "file": ".github/workflows/ci.yml",
          "secrets": [],
          "warnings": []
        },
        "summary": {
          "errors": 0,
          "warnings": 7,
          "valid": true
        }
      },
      {
        "file": ".github/workflows/pr-reminder.yml",
        "syntax": {
          "file": ".github/workflows/pr-reminder.yml",
          "valid": true,
          "errors": []
        },
        "triggers": {
          "file": ".github/workflows/pr-reminder.yml",
          "triggers": [
            "pull_request"
          ],
          "warnings": []
        },
        "actions": {
          "file": ".github/workflows/pr-reminder.yml",
          "actions": [
            "actions/github-script@v6"
          ],
          "warnings": []
        },
        "secrets": {
          "file": ".github/workflows/pr-reminder.yml",
          "secrets": [],
          "warnings": []
        },
        "summary": {
          "errors": 0,
          "warnings": 0,
          "valid": true
        }
      },
      {
        "file": ".github/workflows/python.yml",
        "syntax": {
          "file": ".github/workflows/python.yml",
          "valid": true,
          "errors": []
        },
        "triggers": {
          "file": ".github/workflows/python.yml",
          "triggers": [
            "push",
            "pull_request"
          ],
          "warnings": []
        },
        "actions": {
          "file": ".github/workflows/python.yml",
          "actions": [
            "actions/checkout@v3",
            "actions/setup-python@v4",
            "actions/checkout@v3",
            "actions/setup-python@v4",
            "codecov/codecov-action@v3"
          ],
          "warnings": []
        },
        "secrets": {
          "file": ".github/workflows/python.yml",
          "secrets": [],
          "warnings": []
        },
        "summary": {
          "errors": 0,
          "warnings": 0,
          "valid": true
        }
      },
      {
        "file": ".github/workflows/rust.yml",
        "syntax": {
          "file": ".github/workflows/rust.yml",
          "valid": true,
          "errors": []
        },
        "triggers": {
          "file": ".github/workflows/rust.yml",
          "triggers": [
            "push",
            "pull_request"
          ],
          "warnings": []
        },
        "actions": {
          "file": ".github/workflows/rust.yml",
          "actions": [
            "actions/checkout@v3",
            "dtolnay/rust-toolchain@stable",
            "Swatinem/rust-cache@v2",
            "actions/checkout@v3",
            "dtolnay/rust-toolchain@stable",
            "Swatinem/rust-cache@v2",
            "actions/checkout@v3",
            "dtolnay/rust-toolchain@stable",
            "Swatinem/rust-cache@v2",
            "actions/checkout@v3",
            "dtolnay/rust-toolchain@stable",
            "actions/checkout@v3",
            "dtolnay/rust-toolchain@stable",
            "Swatinem/rust-cache@v2"
          ],
          "warnings": []
        },
        "secrets": {
          "file": ".github/workflows/rust.yml",
          "secrets": [],
          "warnings": []
        },
        "summary": {
          "errors": 0,
          "warnings": 0,
          "valid": true
        }
      },
      {
        "file": ".github/workflows/release.yml",
        "syntax": {
          "file": ".github/workflows/release.yml",
          "valid": true,
          "errors": []
        },
        "triggers": {
          "file": ".github/workflows/release.yml",
          "triggers": [
            "release"
          ],
          "warnings": [
            "No push or pull_request triggers found"
          ]
        },
        "actions": {
          "file": ".github/workflows/release.yml",
          "actions": [
            "docker/setup-buildx-action@v3",
            "docker/login-action@v3",
            "jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be",
            "docker/build-push-action@v6",
            "actions/checkout@v4",
            "softprops/action-gh-release@v2"
          ],
          "warnings": []
        },
        "secrets": {
          "file": ".github/workflows/release.yml",
          "secrets": [
            "GITHUB_TOKEN"
          ],
          "warnings": []
        },
        "summary": {
          "errors": 0,
          "warnings": 1,
          "valid": true
        }
      },
      {
        "file": ".github/workflows/integration.yml",
        "syntax": {
          "file": ".github/workflows/integration.yml",
          "valid": true,
          "errors": []
        },
        "triggers": {
          "file": ".github/workflows/integration.yml",
          "triggers": [
            "push",
            "pull_request"
          ],
          "warnings": []
        },
        "actions": {
          "file": ".github/workflows/integration.yml",
          "actions": [
            "actions/checkout@v3",
            "dtolnay/rust-toolchain@stable",
            "actions/setup-python@v4"
          ],
          "warnings": []
        },
        "secrets": {
          "file": ".github/workflows/integration.yml",
          "secrets": [],
          "warnings": []
        },
        "summary": {
          "errors": 0,
          "warnings": 0,
          "valid": true
        }
      }
    ]
  },
  "python_linting": {
    "summary": {
      "total_checks": 5,
      "passed_checks": 0,
      "errors": 5,
      "warnings": 0
    },
    "checks": [
      {
        "tool": "black",
        "status": "failed",
        "message": "Black code formatter - Issues found",
        "output": "--- /repos/commune/mod-net-modules/commune-ipfs/app/config.py\t2025-07-30 19:49:30.833148+00:00\n+++ /repos/commune/mod-net-modules/commune-ipfs/app/config.py\t2025-07-30 20:14:06.092802+00:00\n@@ -18,24 +18,20 @@\n     port: int = Field(default=8000, env=\"PORT\")\n     debug: bool = Field(default=False, env=\"DEBUG\")\n \n     # IPFS Configuration\n     ipfs_api_url: str = Field(default=\"http://localhost:5001\", env=\"IPFS_API_URL\")\n-    ipfs_gateway_url: str = Field(\n-        default=\"http://localhost:8080\", env=\"IPFS_GATEWAY_URL\"\n-    )\n+    ipfs_gateway_url: str = Field(default=\"http://localhost:8080\", env=\"IPFS_GATEWAY_URL\")\n     ipfs_timeout: int = Field(default=30, env=\"IPFS_TIMEOUT\")\n \n     # Database Configuration\n     database_url: str = Field(default=\"sqlite:///./files.db\", env=\"DATABASE_URL\")\n \n     # Security Configuration (Optional)\n     secret_key: str | None = Field(default=None, env=\"SECRET_KEY\")\n     algorithm: str = Field(default=\"HS256\", env=\"ALGORITHM\")\n-    access_token_expire_..."
      },
      {
        "tool": "isort",
        "status": "failed",
        "message": "Import sorter - Issues found",
        "output": "--- /repos/commune/mod-net-modules/test_hooks.py:before\t2025-07-30 14:05:44.202812\n+++ /repos/commune/mod-net-modules/test_hooks.py:after\t2025-07-30 14:14:06.472132\n@@ -4,14 +4,15 @@\n This script validates the GitHub Actions setup and can be used as a pre-commit hook.\n \"\"\"\n \n+import json\n import os\n+import shutil\n+import subprocess\n import sys\n+from pathlib import Path\n+from typing import Any, Dict, List, Optional\n+\n import yaml\n-import subprocess\n-import json\n-from pathlib import Path\n-from typing import Dict, List, Optional, Any\n-import shutil\n \n \n class GitHubActionsValidator:\n--- /repos/commune/mod-net-modules/commune-ipfs/main.py:before\t2025-07-30 13:49:30.919149\n+++ /repos/commune/mod-net-modules/commune-ipfs/main.py:after\t2025-07-30 14:14:06.481926\n@@ -11,12 +11,6 @@\n from pathlib import Path\n \n import uvicorn\n-from fastapi import Depends, FastAPI, Request\n-from fastapi.middleware.cors import CORSMiddleware\n-from fastapi.responses import HTMLResponse\n-from fastapi.staticfiles im..."
      },
      {
        "tool": "flake8",
        "status": "failed",
        "message": "Linting - Issues found",
        "output": "./.venv/bin/activate_this.py:28:89: E501 line too long (97 > 88 characters)\n./.venv/bin/activate_this.py:44:89: E501 line too long (103 > 88 characters)\n./.venv/bin/activate_this.py:47:89: E501 line too long (94 > 88 characters)\n./.venv/bin/activate_this.py:49:89: E501 line too long (93 > 88 characters)\n./.venv/lib/python3.13/site-packages/_virtualenv.py:14:89: E501 line too long (114 > 88 characters)\n./.venv/lib/python3.13/site-packages/_virtualenv.py:16:89: E501 line too long (113 > 88 characters)\n./.venv/lib/python3.13/site-packages/_virtualenv.py:34:89: E501 line too long (110 > 88 characters)\n./.venv/lib/python3.13/site-packages/_virtualenv.py:45:89: E501 line too long (109 > 88 characters)\n./.venv/lib/python3.13/site-packages/_virtualenv.py:46:89: E501 line too long (106 > 88 characters)\n./.venv/lib/python3.13/site-packages/_virtualenv.py:57:89: E501 line too long (108 > 88 characters)\n./.venv/lib/python3.13/site-packages/_virtualenv.py:58:89: E501 line too long (113 > 88 charact..."
      },
      {
        "tool": "mypy",
        "status": "failed",
        "message": "Type checking - Issues found",
        "output": "target/debug/build/wasm-opt-sys-0512420c99c89c7a/out/cxxbridge/crate/wasm-opt-sys/binaryen/third_party/setup.py: error: Duplicate module named \"setup\" (also at \"./commune-ipfs/setup.py\")\ntarget/debug/build/wasm-opt-sys-0512420c99c89c7a/out/cxxbridge/crate/wasm-opt-sys/binaryen/third_party/setup.py: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#mapping-file-paths-to-modules for more info\ntarget/debug/build/wasm-opt-sys-0512420c99c89c7a/out/cxxbridge/crate/wasm-opt-sys/binaryen/third_party/setup.py: note: Common resolutions include: a) using `--exclude` to avoid checking one of them, b) adding `__init__.py` somewhere, c) using `--explicit-package-bases` or adjusting MYPYPATH\nFound 1 error in 1 file (errors prevented further checking)\n"
      },
      {
        "tool": "pylint",
        "status": "failed",
        "message": "Advanced linting - Issues found",
        "output": "************* Module setup\nsetup.py:1:0: E0401: Unable to import 'setuptools' (import-error)\n************* Module test_hooks\ntest_hooks.py:19:0: C0303: Trailing whitespace (trailing-whitespace)\ntest_hooks.py:24:0: C0303: Trailing whitespace (trailing-whitespace)\ntest_hooks.py:28:0: C0303: Trailing whitespace (trailing-whitespace)\ntest_hooks.py:36:0: C0303: Trailing whitespace (trailing-whitespace)\ntest_hooks.py:41:0: C0303: Trailing whitespace (trailing-whitespace)\ntest_hooks.py:45:0: C0303: Trailing whitespace (trailing-whitespace)\ntest_hooks.py:58:0: C0303: Trailing whitespace (trailing-whitespace)\ntest_hooks.py:65:0: C0303: Trailing whitespace (trailing-whitespace)\ntest_hooks.py:68:0: C0303: Trailing whitespace (trailing-whitespace)\ntest_hooks.py:71:0: C0303: Trailing whitespace (trailing-whitespace)\ntest_hooks.py:73:0: C0303: Trailing whitespace (trailing-whitespace)\ntest_hooks.py:78:0: C0303: Trailing whitespace (trailing-whitespace)\ntest_hooks.py:80:0: C0303: Trailing whitespace ..."
      }
    ]
  },
  "rust_linting": {
    "summary": {
      "total_checks": 4,
      "passed_checks": 4,
      "errors": 0,
      "warnings": 0
    },
    "checks": [
      {
        "tool": "cargo check",
        "status": "passed",
        "message": "Compilation check - All checks passed"
      },
      {
        "tool": "cargo fmt",
        "status": "passed",
        "message": "Code formatting - All checks passed"
      },
      {
        "tool": "cargo clippy",
        "status": "passed",
        "message": "Linting - All checks passed"
      },
      {
        "tool": "cargo test",
        "status": "passed",
        "message": "Unit tests - All checks passed"
      }
    ]
  },
  "repository": {
    "checks": [
      "\u2713 .gitignore exists",
      "\u2139 Branch protection settings should be verified in GitHub UI"
    ],
    "warnings": []
  },
  "overall_summary": {
    "total_errors": 5,
    "total_warnings": 8,
    "status": "failed"
  }
}
